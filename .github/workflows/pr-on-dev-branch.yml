name: validation

on:
  pull_request:
    types:
      - opened
      - synchronize
    paths:
      - force-app/**
    branches:
      - main

jobs:
  validate-to-uat:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Salesforce CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sf/channels/stable/sf-linux-x64.tar.xz
          mkdir ~/sf
          tar xJf sf-linux-x64.tar.xz -C ~/sf --strip-components 1
          echo "$HOME/sf/bin" >> $GITHUB_PATH
          ~/sf/bin/sf version

      - name: Populate auth file with SFDX_URL secret of target org
        run: |
          echo ${{ secrets.PROD_URL}} > ./PROD_URL.txt

      - name: Authenticate to target Org
        run: sf org login sfdx-url --sfdx-url-file ./PROD_URL.txt --set-default --alias myOrg

      - name: Validation - run all tests
        run: sf project deploy start --source-dir force-app --dry-run --test-level RunAllTestsInOrg --target-org myOrg -r --json -g

  merge-pr:
    runs-on: ubuntu-latest
    needs: validate-to-uat
    steps:
      - name: Merge pull request
        uses: actions/github-script@v6
        with:
          script: |
            const { octokit } = require('@actions/github-script');
            const prNumber = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Check if all checks have passed
            const { data: checks } = await octokit.rest.checks.listForRef({
              owner,
              repo,
              ref: context.sha
            });

            const allChecksPassed = checks.check_runs.every(check => check.conclusion === 'success');

            if (allChecksPassed) {
              await octokit.rest.pulls.merge({
                owner,
                repo,
                pull_number: prNumber,
                merge_method: 'squash'
              });
            } else {
              console.log("Not all checks have passed. PR will not be merged.");
            }