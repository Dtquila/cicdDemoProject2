name: validation

on:
  pull_request:
    types:
      - opened
      - synchronize
    paths:
      - force-app/**
    branches:
      - main

jobs:
  validate-to-uat:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Salesforce CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sf/channels/stable/sf-linux-x64.tar.xz
          mkdir ~/sf
          tar xJf sf-linux-x64.tar.xz -C ~/sf --strip-components 1
          echo "$HOME/sf/bin" >> $GITHUB_PATH
          ~/sf/bin/sf version

      - name: 'Installing sfdx git delta'
        run: | 
          echo y | sf plugins:install sfdx-git-delta
          sf plugins 

      # Install SFDX scanner
      - name: 'Installing SFDX scanner'
        run: sf plugins install @salesforce/sfdx-scanner

      # Get the Integration Org SFDX URL and store it in a text file
      - name: Populate auth file with SFDX_URL secret of target org
        run: |
          echo ${{ secrets.PROD_URL}} > ./PROD_URL.txt

      # Authenticate to org using the URL stored in the text file
      - name: Authenticate to target Org
        run: sf org login sfdx-url --sfdx-url-file ./PROD_URL.txt --set-default --alias myOrg


      # We use SFDX Git Delta to create a directory with only the metadata that has changed, this allows us
      # to deploy only those changes, as opposed to deploying the entire branch. This helps reducing deployment times
      - name: 'Create delta packages for new, modified or deleted metadata'
        run: |
            echo "Files created/before:"
            find .
            mkdir changed-sources
            sf sgd source delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/
            cd changed-sources
            echo "Files created/after:"
            find .
            echo "package.xml"
            cat package/package.xml
            echo "destructiveChanges_Package.xml"
            cat destructiveChanges/package.xml
            echo "destructiveChanges"
            cat destructiveChanges/destructiveChanges.xml

      # Scan the code in the delta directory by using sfdx scanner. Output the results of the scan in a new file
      # called apexScanResults.sarif
      - name: 'Scan code'
        run: |
            cd changed-sources
            sf scanner run --format sarif --target ./**/*.cls --category Design,Best Practices,Performance --outfile apexScanResults.sarif
            cd ..

      - name: Display SARIF file
        run: |
            echo "Scan results:"
            cat changed-sources/apexScanResults.sarif
            
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: changed-sources/apexScanResults.sarif

      - name: Validation - run all tests
        run: sf project deploy start --manifest changed-sources/package/package.xml --post-destructive-changes changed-sources/destructiveChanges/destructiveChanges.xml --dry-run --test-level RunAllTestsInOrg --target-org myOrg -r --json -g